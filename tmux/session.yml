name: uav
root: ./
pre_window: export UAV_NAME="uav1"; export RUN_TYPE=uav; export UAV_TYPE=f330; export WORLD_NAME=simulation; export SENSORS=""; export ODOMETRY_TYPE="gps"; export LOGGER_DEBUG=true; export DEBUG=false; export WORLD_FILE=./custom_configs/world.yaml
startup_window: status
windows:
  - roscore:
      layout: tiled
      panes:
        - roscore
  - status:
      layout: tiled
      panes:
        - waitForRos; roslaunch mrs_uav_status status.launch
  - hw_api:
      layout: tiled
      panes:
        - waitForRos; roslaunch mrs_uav_tello_api api.launch
  - control:
      layout: tiled
      panes:
        - waitForRos; roslaunch mrs_uav_general core.launch config_control_manager:=./custom_configs/control_manager.yaml config_uav_manager:=./custom_configs/uav_manager.yaml config_odometry:=./custom_configs/odometry.yaml config_constraint_manager:=./custom_configs/constraint_manager.yaml config_se3_controller:=./custom_configs/se3.yaml
  - takeoff:
      layout: tiled
      panes:
        - 'history -s rosservice call /uav1/hw_api/arming 1'
        - 'history -s rosservice call /uav1/uav_manager/midair_activation'
        - 'history -s rosservice call /uav1/control_manager/eland'
  - goto:
      layout: tiled
      panes:
        - 'history -s rosservice call /$UAV_NAME/control_manager/goto_fcu \"goal: \[1.0, 0.0, 0.0, 0.0\]\"'
  - rviz:
      layout: tiled
      panes:
        - waitForControl; rosrun rviz rviz -d rviz.rviz
        - waitForControl; roslaunch mrs_rviz_plugins load_robot.launch
        - waitForControl; waitForControl; roslaunch mrs_rviz_plugins rviz_interface.launch
